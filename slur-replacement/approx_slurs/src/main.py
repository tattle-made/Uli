from indic_transliteration import sanscript
import jellyfish
import json

slurs_devanagari = '‡§ú‡§ø‡§π‡§æ‡§¶‡•Ä|‡§õ‡§ï‡•ç‡§ï‡§æ|‡§õ‡§ø‡§®‡§æ‡§≤|‡§∞‡§Ç‡§°‡•Ä|‡§∞‡§£‡•ç‡§°‡•Ä|‡§∞‡§æ‡§Ç‡§°|‡§∞‡§Ç‡§°‡•Ä‡§ñ‡§æ‡§®‡§æ|‡§∞‡§£‡•ç‡§°‡•Ä ' \
                   '‡§∞‡•ã‡§®‡§æ|‡§≤‡•Å‡§≤‡•ç‡§≤‡•Ä|‡§ó‡§æ‡§Ç‡§°|‡§ó‡§æ#|‡§ï‡•Å‡§§‡§ø‡§Ø‡§æ|‡§ï‡•Å‡§§‡•ç‡§§‡•Ä|‡§¨‡§§‡•ç‡§§‡§Æ‡•Ä‡•õ|‡§ï‡•Å‡§≤‡•ç‡§ü‡§æ|‡§π‡§∞‡§æ‡§Æ‡§ú‡§æ‡§¶‡•Ä|‡§∏‡§æ‡§≤‡•Ä|‡§ö‡•ã#|‡§ö‡•Å‡§¶‡§æ‡§à|‡§Æ‡§æ ‡§ï‡•á ' \
                   '‡§≠‡•ã‡§∏‡§°‡§º‡•á|‡§≠‡•ã‡§∏‡•ç‡§°‡•Ä‡§ï‡•á|‡§≠‡•ã‡§õ‡§°‡•Ä ‡§µ‡§æ‡§≤‡§æ|‡§≤‡•ã‡•ú‡•Ç|‡§¨‡§π‡§® ' \
                   '‡§ö‡•ã‡§¶|‡§Æ‡§æ‡§¶‡§∞‡§ö‡•ã‡§¶|‡§≤‡§æ‡§®‡§§‡•Ä|‡§õ‡•Å‡§§‡•Ä‡§Ø‡•á|‡§ö‡•Ç‡§§‡§ø‡§Ø‡•á|‡§ö‡•Ç‡§§|‡§≤‡•å‡•ú‡§æ|‡§≤‡•å‡•ú‡•á|‡§ö‡§∞‡§ø‡§§‡•ç‡§∞‡§π‡•Ä‡§®|‡§≤‡§ø‡§¨‡•ç‡§∞‡§æ‡§£‡•ç‡§°‡•Ç|‡§®‡§Ç‡§ó‡•Ä ‡§™‡•Å‡§Ç‡§ó‡•Ä|‡§™‡§æ‡§ó‡§≤ ‡§î‡§∞‡§§|‡§¨‡§æ‡•õ‡§æ‡§∞‡•Ç ' \
                   '‡§î‡§∞‡§§|‡§¨‡§≤‡§æ‡§§‡•ç‡§ï‡§æ‡§∞|‡§¨‡§¶‡§∏‡•Ç‡§∞‡§§|‡§Æ‡•Å‡§ú‡§∞‡§æ|‡§ú‡§æ‡§π‡§ø‡§≤ ‡§î‡§∞‡§§|‡§î‡§∞‡§§-‡§è-‡§ú‡§æ‡§π‡§ø‡§≤|‡§≠‡•ã‡§∏‡§°‡§º‡•Äwala|‡§ö‡§Ç‡§°‡§æ‡§≤ ‡§ö‡•å‡§ï‡§°‡§º‡•Ä|‡§Æ‡•ç‡§≤‡•á‡§ö‡•ç‡§õ‡§æ|‡§∏‡•Ç‡§Ö‡§∞|‡§∏‡•Ç‡§Ö‡§∞ ‡§ï‡•Ä ' \
                   '‡§î‡§≤‡§æ‡§¶|‡§¶‡•ã‡§ó‡§≤‡•Ä|üèπ‡§™‡§®‡•å‡§§‡•Ä|‡§π‡§∞‡§æ‡§Æ‡•Ä|‡§ó‡§ß‡•Ä|‡§¨‡•Å‡§∞‡§ñ‡§æ ‡§ß‡§§‡•ç‡§§|‡§¨‡•Å‡§≤‡•ç‡§≤‡•Ä|‡§ï‡§≤‡§Æ‡•Å‡§Ç‡§π‡•Ä|‡§™‡§ø‡§õ‡§µ‡§æ‡•ú‡§æ|‡§ï‡§æ‡§Æ ‡§µ‡§æ‡§≤‡•Ä ‡§¨‡§æ‡§à|‡§™‡•à‡§∞ ‡§ï‡•Ä ‡§ú‡•Ç‡§§‡•Ä|‡§®‡§æ‡§≤|‡§ó‡§Ç‡§¶‡•Ä ' \
                   '‡§®‡§æ‡§≤‡•Ä|‡§π‡§ó‡§®‡§æ|‡§∏‡•Å‡§≤‡•ç‡§≤‡•Ä|‡§π‡§ø‡§ú‡§º‡§∞‡§æ‡§™‡§Ç‡§§‡•Ä|‡§§‡§µ‡§æ‡§á‡•û|‡§∏‡•å ‡§ü‡§ï‡§æ ‡§ü‡§Ç‡§ö ' \
                   '‡§Æ‡§æ‡§≤|‡§ï‡§ø‡§®‡•ç‡§®‡§∞|‡§ó‡§¶‡•ç‡§¶‡§æ‡§∞|‡§ö‡§Æ‡§ö‡§æ|‡§ö‡§Æ‡§ö‡•Ä|‡§Ü‡§§‡§Ç‡§ï‡§µ‡§æ‡§¶‡•Ä|‡§Æ‡•Å‡§≤‡§ø‡§Ø‡§æ|‡§ö‡§æ‡§ü‡•Å‡§ï‡§æ‡§∞|‡§¨‡§π‡§® ‡§ï‡•Ä ' \
                   '‡§≤‡•ã‡•ú‡•Ä|‡§ö‡•Å‡§∏‡•ç‡§≤‡§ø‡§Æ|‡§ö‡•Å‡§∏‡•ç‡§≤‡§æ‡§Æ‡§ø|‡§ö‡•Å‡§∏‡§≤‡•ç‡§Æ‡§æ‡§®|‡§ö‡•Ç‡§∏|‡§≠‡•Ä‡§Æ‡§ü‡§æ|‡§≠‡•Ä‡§Æ‡§ü‡•Ä|‡§¨‡•à‡§≤ ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø|‡§π‡§≤‡§æ‡§≤‡§æ|‡§≠‡§¶‡•ç‡§¶‡•Ä ‡§î‡§∞‡§§|‡§≠‡§æ‡§Ç‡§° ‡§î‡§∞‡§§|‡§≠‡§æ‡•ú‡•á ‡§ï‡§æ ' \
                   '‡§ü‡§ü‡•ç‡§ü‡•Ç|‡§¶‡•ã ‡§ï‡•å‡•ú‡•Ä ‡§ï‡•Ä ‡§î‡§∞‡§§|‡§ò‡§ü‡§ø‡§Ø‡§æ ‡§î‡§∞‡§§|‡§¨‡•á‡§π‡•Ç‡§¶‡§æ ‡§î‡§∞‡§§|‡§ö‡§æ‡§≤‡•Ç ‡§î‡§∞‡§§|‡§ù‡•Ç‡§†‡•Ä ‡§î‡§∞‡§§|‡§Æ‡§∞ ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§ú‡§æ‡§§‡•Ä|‡§®‡§≤‡•ç‡§≤‡•Ä|‡§≠‡•Ç‡§§‡§®‡•Ä ‡§ï‡•á|‡§ö‡•Ç‡§§ ' \
                   '‡§ï‡•á ‡§¨‡§æ‡§≤|‡§Æ‡§æ‡§¶‡§∞‡§ú‡§æ‡§§|‡§≠‡•ú‡§µ‡§æ|‡§ö‡•Ç‡§ö‡•Ä|‡§ü‡§ü‡•ç‡§ü‡•Ä|‡§ó‡§ü‡§∞ ‡§™‡•à‡§¶‡§æ‡§á‡§∂|‡§Æ‡•Å‡§Å‡§π ‡§Æ‡•à‡§Ç ‡§≤‡•á|‡§Æ‡•Ç‡§§|‡§®‡§æ‡§ú‡§æ‡§Ø‡•õ|‡§ï‡§ü‡§æ ‡§≤‡•Å‡§Ç‡§°|‡§ï‡§æ‡§≤‡§æ ‡§ü‡•á‡§Ç‡§ü|‡§ú‡•Ç‡§§‡§æ ' \
                   '‡§ñ‡§æ‡§Ø‡•á‡§ó‡•Ä|‡§¨‡•Å‡§∞‡§ñ‡•á ‡§µ‡§æ‡§≤‡•Ä|‡§ï‡§æ‡§≤‡•Ä ‡§ï‡§≤‡•Ç‡§ü‡•Ä|‡§ï‡§æ‡§≤‡•á ‡§§‡§µ‡•á|‡§Æ‡•ã‡§ü‡•Ä ‡§≠‡•à‡§Ç‡§∏|‡§¶‡•á‡§π‡§æ‡§§‡§®|‡§¶‡•á‡§π‡§æ‡§§‡•Ä ‡§î‡§∞‡§§|‡§ó‡§£‡§ø‡§ï‡§æ|‡§π‡§¨‡§∂‡•Ä|‡§ì‡§≤‡§æ ‡§π‡•Å ' \
                   '‡§â‡§¨‡§∞|‡§∞‡§®‡§°wa|‡§®‡§æ‡§ö‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä|‡§π‡§≤‡§æ‡§≤‡§æ'
slurs_roman = 'ma ki chui|naachne waali|Katwa|ABLANARI|AblaNari|ablanari|chakka|jihidis|jihadis|jihadi|Jihidis' \
              '|Jihadis|jihadi|zehadi|jehadan|jihadinon|Chakko|chakki|chaka|Chinal|Randi|ramdi|Randie|randya' \
              '|randikhana|r&d-khana|randi ke beej|Lulli|Gasti|Meetha|Halwa|Gud|Gaandu|Gaand|Gandiaal|Dheela ' \
              'Lun@|lodu|kutiya|kutti|Chudail|Badchalan|Battameez|kulta|haramjadi|dyan|saali|sali|chod|chodu ' \
              'bhagat|chudai|chooda|chuda|Bhdsk|2BHK|Bhosi ke|bsdk|bhonsdi ke|bhosad|bhosdiwale|maa ka ' \
              'bhosra|Lodu|bhenchod|Madarchod|Maderchod|mcp|mc|Lanti|choo$iya|chutiye|chutiya|Chut|hutiye|chutie' \
              '|chutia|chut ke dhakkan|chut marli|chutan|<3da|Lavde|Gandu|Rakhail|librandu|chal phut|nangi ' \
              'poongi|pagal aurat|bazaru|bazari aurat|ola hi uber hai|balatkar|Ugly|Mujra|mujra|jaahil ' \
              'aurat|Mulli|hilana|hilaogi|Mlechcha|Suar|suar ki ' \
              'aulad|doghli|Panauti|panooti|harami|gadhi|üÖ±Ô∏èulli|kalmuhi|pichwada|jhadu|bai|kaam wali bai|pair ki ' \
              'jutti|naali|hagna|tukde tukde gang|Sulli|Tawaif|sau taka tunch maal|Skirt waali bai|Dhimmi ' \
              'hood|Dhimmihood|izzlam|gaddar|chamcha|chamchi|aatankwadi|Mulliya|Uncut|chatukar|Bahan Ke ' \
              'loudi|Kachra|Chuslim|chuslami|Chusalmans|chus|Bhimta|bheem-meem walas|bail budhi|Budhdhi|bhadi ' \
              'aurat|bhanndh aurat|bhadi ka tattu|2 Kaudi ki aurat|Gatiya|Ghatiya aurat|behuda aurat|chalu ' \
              'aurat|jhuti aurat|Kaali aurat|Kaali bhaand|marr kyun nahi jaati|nalli|dimaag se paidal|bhootni|bhootni ' \
              'ke|choot ke baal|madarjaat|bhadva|bhadvi|bhandve|chuchi|tatti|maa ka boba chusu|mooh|munh mein ' \
              'le|mutth|najayaz paidaish|najayaz aulaad|Gutter ki paidaish|kata Lund|kala tent|joota khayegi|burkhe ' \
              'waali|ladki kahin ka|victim card|Aurat card|kali kalutti|Kale tawe|naali saaf kar|moti bhains|sukkhi ' \
              'haddi|Pataka|choodiyan pehen lo|abba ka naam|Ganika|gaand ' \
              'phadna|chewtypa|atrocuty_act|RandiKutiya|sulli|Rice bags|ola u uber|lovejihad|dull-it|toxic ' \
              'aunty|Presstitutes|libtard|bimbo|slims|Black ' \
              'Pepper|faggot|Sissy|whore|chrislamocommies|piddilover|Dynast Sycophants|Deshdrohi Chinese|Pak ' \
              'agents|Chinese Corona|Chinks|chinky|Feminazi|Mulli|R@ndi|halala|Half M|Scumreds|scumbags|burnol|anti ' \
              'national tukde|pheminist|dented-painted|Muzlim|Buzlim|Izzlam|pissfull|Simp|Bitch|Ms|sekoolar|sickular' \
              '|sc0undrel|R@pe|R@p3|Characterless woman|Drama ' \
              'Queen|Ferrorists|Cunt|Slut|pussy|ugly|stupid|promiscuous|crazy|fat|fag|homo|hoe|motherfucker' \
              '|sisterfucker|bastard|b@st@rd|bint|dyke|gash|muslimette|muttah|scag|gender ' \
              'nigger|assfucker|boobs|boobies|Melons|lesbain|moslem|nasty|redlight|nymph|piss|pimp|poop|pube|puke' \
              '|retarded|slave|sissy|ola uh uber|pu55i|pu55y|mothafuck|mothafucka|mothafuckaz|mothafucked|mothafucker' \
              '|mothafuckin|mothafucking|mothafuckings|motherfuck|motherfucked|motherfucker|motherfuckin' \
              '|motherfucking|motherfuckings|lesbain|lesbayn|lesbian|lesbin|lesbo|nastyslut|nastywhore|nastybitch' \
              '|nastyho|December 23, 2021|#OSISORU|#thevdiyaa|#thevdiya|#gommala|#Pundamavane|#pundai|#otha|Koodhi' \
              '|pottai|Potta Alith|Aththai|athai|loosu|fuck|cunt'
slurs_tamil = '#‡ÆÆ‡ØÅ‡Æü‡Øç‡Æü‡Ææ‡Æâ‡Æ™‡Æø|#‡Æ™‡ØÜ‡Æ∞‡Æø‡ÆØ‡Ææ‡Æ∞‡Ææ‡Æµ‡Æ§‡ØÅ_‡ÆÆ‡ÆØ‡Æø‡Æ∞‡Ææ‡Æµ‡Æ§‡ØÅ|#‡Æ™‡Ææ‡Æ≤‡Æø‡ÆØ‡Æ≤‡Øç_‡Æú‡Æ≤‡Øç‡Æö‡Ææ_‡Æï‡Æü‡Øç‡Æö‡Æø|‡Æ™‡Øä‡ÆÆ‡Øç‡Æ™‡Æ≥ ' \
              '‡Æ™‡Øä‡Æ∞‡ØÅ‡Æï‡Øç‡Æï‡Æø|#‡Æô‡Øç‡Æï‡Øã‡Æ§‡Øç‡Æ§‡Ææ|‡Æï‡Øã‡Æ§‡Øç‡Æ§‡Ææ|#‡Æï‡Øã‡Æ§‡Øç‡Æ§‡Ææ|#‡Æï‡Øä‡ÆÆ‡Øç‡ÆÆ‡Ææ|‡Æ§‡Ææ‡ÆØ‡Øã‡Æ≥‡Æø|‡Æ§‡Øá‡Æµ‡Øç‡Æü‡Æø‡ÆØ‡Ææ ' \
              '‡Æ™‡Øà‡ÆØ‡Ææ|‡Æ§‡Øá‡Æµ‡Øç‡Æü‡Æø‡ÆØ‡Ææ|#‡Æ™‡Øä‡Æü‡Øç‡Æü‡Øà|#‡Æö‡Ææ‡ÆÆ‡Ææ‡Æ©‡Øç|‡Æö‡ØÇ‡Æ§‡Øç‡Æ§‡ØÅ|‡Æ≤‡ØÜ‡Æ∏‡Øç‡Æ™‡Æø‡ÆØ‡Æ©‡Øç|‡Æä‡ÆÆ‡Øç‡Æ™‡ØÅ|‡Æ™‡ØÅ‡Æ£‡Øç‡Æü|#‡Æ§‡Æø‡Æ∞‡ØÅ‡Æü‡Øç‡Æü‡ØÅ_' \
              '‡Æ™‡Æ≥‡Øç‡Æ≥‡Æ©‡Øç|‡Æê‡Æü‡Øç‡Æü‡ÆÆ‡Øç|‡ÆÖ‡ÆØ‡Æø‡Æü‡Øç‡Æü‡ÆÆ‡Øç|‡Æö‡Ææ‡ÆÆ‡Ææ‡Æ©‡Øç|‡Æï‡ØÇ‡Æ§‡Æø|‡ÆÜ‡Æü‡Øç‡Æü‡Æï‡Øç‡Æï‡Ææ‡Æ∞‡Æø|‡Æµ‡Øá‡Æö‡Øà|‡Æµ‡Øá‡Æö|‡Æ™‡Øä‡Æ§‡ØÅ‡Æö‡Øç ‡Æö‡Øä‡Æ§‡Øç‡Æ§‡ØÅ|‡Æä‡Æ∞‡Øç ‡ÆÆ‡Øá‡ÆØ‡Øç‡Æ±‡Æ§‡ØÅ|‡Æ®‡Æü‡Æ§‡Øç‡Æ§‡Øà ' \
              '‡Æï‡ØÜ‡Æü‡Øç‡Æü‡Æ§‡ØÅ|‡Æ™‡Øä‡Æü‡Øç‡Æü‡Øà|‡Æï‡Øç‡Æ∞‡Øã‡Æ∏‡Øç‡Æ∏‡Æø|‡Æ§‡Ææ‡ÆØ‡Øã‡Æ≥‡Æø|‡Æï‡ØÅ‡Æú‡Øç‡Æú‡Æø‡Æ≤‡ØÄ‡Æ∏‡Øç|‡ÆÆ‡Ææ‡Æô‡Øç‡Æï‡Ææ|‡Æï‡Øã‡Æ¥‡Æø|‡ÆÆ‡ØÅ‡Æ≤‡Øà|‡Æ™‡Æ±‡Æ§‡Øç‡Æ§‡Ææ‡ÆØ‡Øã‡Æ≤‡Æø|‡Æì‡Æï‡Øç‡Æï|‡Æ§‡Øá‡Æµ‡Æü‡Æø‡ÆØ‡Ææ ‡ÆÆ‡Æµ‡Æ©‡Øç|‡Æ§‡Øá‡Æµ‡Æü‡Æø‡ÆØ‡Ææ ' \
              '‡Æ™‡Æö‡Æô‡Øç‡Æï‡Æ≥‡Ææ|‡Æ™‡ØÅ‡Æ£‡Øç‡Æü‡Øà|‡Æ™‡ØÅ‡Æ£‡Øç‡Æü|‡Æ™‡Øä‡Æü‡Øç‡Æü‡Øà ‡Æ®‡Ææ‡ÆØ‡Øç|‡Æµ‡Ææ‡ÆØ‡Æø‡Æ≤ ‡Æ™‡ØÇ‡Æ≤ ‡Æµ‡Æø‡Æü‡ØÅ‡Æµ‡Øá‡Æ©‡Øç|‡Æ§‡Øá‡Æµ‡Æø‡Æü‡Æø‡ÆØ‡Ææ ‡Æ™‡ØÅ‡Æ£‡Øç`‡Æü|‡Æ™‡ØÅ‡Æ£‡Øç‡Æü‡Øà ‡Æö‡Øà‡Æü‡ØÅ|‡Æâ‡Æô‡Øç‡Æï‡ÆÆ‡Øç‡ÆÆ‡Ææ‡Æµ‡Øà ' \
              '‡Æì‡Æï‡Øç‡Æï|‡Æ§‡Øá‡Æµ‡Æø‡Æü‡Æø‡ÆØ‡Ææ‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æ™‡Øä‡Æ±‡Æ®‡Øç‡Æ§‡Æµ‡Æ©‡Øç|‡Æö‡ØÇ‡Æ§‡Øç‡Æ§‡Æü‡Æø|‡Æí‡Æ©‡Øç‡Æ™‡Æ§‡ØÅ|‡Æ™‡Øä‡Æ©‡Øç‡Æ∏‡Øç|‡ÆÜ‡Æ™‡Øç‡Æ™ ‡ÆÆ‡Ææ‡ÆÆ‡Æø|‡Æï‡ÆÆ‡Øç‡Æ™‡ØÅ ‡Æ§‡ØÅ‡Æ£‡Øç‡Æü‡ØÅ|‡Æï‡Æ≤‡Øç‡Æ≤‡ØÅ|‡ÆÜ‡ÆÆ‡Øç‡Æ™‡ØÅ‡Æ≥ ' \
              '‡Æï‡Æ≥‡Øç‡Æ≥‡Æ©‡Øç|‡ÆÖ‡Æ≤‡Æø|‡ÆÖ‡Æ∞‡Æµ‡Ææ‡Æ£‡Æø|‡Æ™‡Æø‡Æ©‡Øç‡Æ§‡ØÅ‡Æµ‡Ææ‡Æ∞‡Æø|‡Æ™‡Øä‡Æü‡Æø‡ÆØ‡Æ©‡Øç ‡ÆÆ‡Ææ‡Æ∏‡Øç‡Æü‡Æ∞‡Øç|‡Æü‡Æø‡Æï‡Æø|‡Æï‡ØÅ‡Æ∞‡ØÅ‡ÆÆ‡Øç‡Æ™|‡ÆÖ‡Æ§‡Øç‡Æ§‡Øà|‡Æ≤‡ØÇ‡Æö‡ØÅ|‡Æï‡ØÇFire|#‡Æì‡Æ§‡Øç‡Æ§|Sunflower‡Æ£‡Øç‡Æü‡Øà|‡Æ≤‡ØÇ‡Æö‡ØÅ ‡Æï‡ØÇ'

# split into lists
slurs_devanagari = slurs_devanagari.split('|')
slurs_roman = slurs_roman.split('|')
slurs_tamil = slurs_tamil.split('|')


def get_devanagari_roman_transliteration(phrase):
    return sanscript.transliterate(phrase, sanscript.DEVANAGARI, sanscript.ITRANS)

def get_roman_devanagari_transliteration(phrase):
    return sanscript.transliterate(phrase, sanscript.ITRANS, sanscript.DEVANAGARI)

def get_tamil_roman_transliteration(phrase):
    return sanscript.transliterate(phrase, sanscript.TAMIL, sanscript.ITRANS)

def get_roman_tamil_transliteration(phrase):
    return sanscript.transliterate(phrase, sanscript.ITRANS, sanscript.TAMIL)


def get_transliterations():
    slurs_devanagari_transliterated = []
    for phrase in slurs_devanagari:
        slurs_devanagari_transliterated.append(get_devanagari_roman_transliteration(phrase))

    slurs_tamil_transliterated = []
    for phrase in slurs_tamil:
        slurs_tamil_transliterated.append(get_tamil_roman_transliteration(phrase))

    return slurs_devanagari_transliterated, slurs_tamil_transliterated


# do NOT parallelize replacement when using this dict as longer terms need to be checked first in order
devanagari_itrans_expansion_dict = {'A': 'aa', 'I': 'ee', 'MD': 'nd', 'ND': 'nd', '.D': 'd', 'U': 'oo', 'Mg': 'ng',
                                    'Mh': 'h', 'Mt': 'nt', 'Ch': 'ch', 'T': 't', '.N': 'n', 'M': 'n'}

# TODO: tamil_expansion_dict


# Misspellings - Rules:
# 1. Only create misspellings of phrases in 'slurs_roman' and transliterated slurs
# 2. Do not modify first letter as it will change the meaning.
# 3. Do not modify first character if it is a '#' symbol. Consider the slur a hashtag
# 4. Create slur - Replace '$' signs with 's'
# 5. Create slur - Replace 's' with '$'
# 6. Devanagari: Do not replace any capitalized letter/sequences that exists in 'devanagari_itrans_expansion_dict'.
#    These are special phonetic cases that have to be explicitly handled.
# 7. '#' symbols used at end of words are used as masking symbols in slurs. Do not replace them.
# Modified Source: https://norvig.com/spell-correct.html
def edits1(word, script):
    # "All edits that are one edit away from `word`."

    # Rule 6
    if script == "devanagari":
        for key in devanagari_itrans_expansion_dict:
            if key in word:
                word = word.replace(key, devanagari_itrans_expansion_dict[key])
    # TODO: tamil Rule 6

    letters = 'abcdefghijklmnopqrstuvwxyz'
    splits = [(word[:i], word[i:]) for i in range(len(word) + 1)]

    # ignore first pair as we need to preserve first letter (Rule 2)
    # and first 2 pairs if the first letter is a '#' (Rule 3)
    ignore_len = 1
    if word[0] == '#':
        ignore_len = 2
    splits = splits[ignore_len:]

    # ignore last pair if it ends with '#' (Rule 7)
    splits = splits[:-1]

    # Rule 4
    replace_dollar_char = ''
    if '$' in word:
        replace_dollar_char = word.replace('$', 's')

    # Rule 5
    replace_s_char = ''
    if 's' in word:
        replace_s_char = word.replace('s', '$')

    deletes = [L + R[1:] for L, R in splits if R]
    transposes = [L + R[1] + R[0] + R[2:] for L, R in splits if len(R) > 1]
    replaces = [L + c + R[1:] for L, R in splits if R for c in letters]
    inserts = [L + c + R for L, R in splits for c in letters]

    return set(deletes + transposes + replaces + inserts + list(replace_dollar_char) + list(replace_s_char))


def refine_slur_list_phonetic(slur_dict):
    slur_dict_refined = {}
    for key in slur_dict:
        key_phonetic = jellyfish.soundex(key)
        refined_slur_list = []
        for edit_slur in slur_dict[key]:
            # 1. This does not work successfully - attempt reverse transliterate and save only if it matches key
            #   reverse_transliteration_devanagari = get_roman_devanagari_transliteration(edit_slur)
            #   no transliteration matches - need phonetic algo here
            # 2. The libindic-soundex library has errors
            # 3. The following algorithms in jellyfish package do not match any slur: metaphone, nysiis
            #   The jellyfish.match_rating_codex algorithm crashes
            slur_phonetic = jellyfish.soundex(edit_slur)
            if slur_phonetic == key_phonetic:
                print("phonetic match")
                refined_slur_list.append(edit_slur)
        slur_dict_refined[key] = refined_slur_list
    return slur_dict_refined


if __name__ == '__main__':
    # get transliterations
    slurs_devanagari_transliterations, slurs_tamil_transliterations = get_transliterations()
    # print(slurs_devanagari_transliterations)
    # print(slurs_tamil_transliterations)

    # create list of slurs 1-edit distance apart - Damerau‚ÄìLevenshtein distance
    slurs_devanagari_transliterations_edit1 = {}
    for slur in slurs_devanagari_transliterations:
        slurs_devanagari_transliterations_edit1_list = [item for item in edits1(slur, "devanagari")]
        slurs_devanagari_transliterations_edit1[slur] = slurs_devanagari_transliterations_edit1_list
    # print(slurs_devanagari_transliterations_edit1)
    # get refined list with phonetic algorithm matching
    slurs_devanagari_transliterations_edit1_refined = refine_slur_list_phonetic(slurs_devanagari_transliterations_edit1)
    with open('../output/slurs_devanagiri_transliteration.json', 'w', encoding='utf-8') as f:
        json.dump(slurs_devanagari_transliterations_edit1_refined, f, ensure_ascii=False, indent=4)

    # create list of slurs 1-edit distance apart - Damerau‚ÄìLevenshtein distance
    slurs_tamil_transliterations_edit1 = {}
    for slur in slurs_tamil_transliterations:
        slurs_tamil_transliterations_edit1_list = [item for item in edits1(slur, "tamil")]
        slurs_tamil_transliterations_edit1[slur] = slurs_tamil_transliterations_edit1_list
    # print(slurs_tamil_transliterations_edit1)
    # get refined list with phonetic algorithm matching
    slurs_tamil_transliterations_edit1_refined = refine_slur_list_phonetic(slurs_tamil_transliterations_edit1)
    with open('../output/slurs_tamil_transliteration.json', 'w', encoding='utf-8') as f:
        json.dump(slurs_tamil_transliterations_edit1_refined, f, ensure_ascii=False, indent=4)

    slurs_roman_transliterations_edit1 = {}
    for slur in slurs_roman:
        slurs_roman_transliterations_edit1_list = [item for item in edits1(slur, "roman")]
        slurs_roman_transliterations_edit1[slur] = slurs_roman_transliterations_edit1_list
    # print(slurs_roman_transliterations_edit1)
    # get refined list with phonetic algorithm matching
    slurs_roman_transliterations_edit1_refined = refine_slur_list_phonetic(slurs_roman_transliterations_edit1)
    with open('../output/slurs_roman_transliteration.json', 'w', encoding='utf-8') as f:
        json.dump(slurs_roman_transliterations_edit1_refined, f, ensure_ascii=False, indent=4)
