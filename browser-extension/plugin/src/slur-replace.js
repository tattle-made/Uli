import { getAllSlurs } from './slur-store';

const PUNCTUATIONS = [' ', '.', ',', ';', '#', '"'];

function generateMask(word, offset, string) {
    const preceding_word = string[offset - 1];
    const next_word = string[offset + word.length];

    if (
        (preceding_word == undefined ||
            PUNCTUATIONS.includes(preceding_word)) &&
        (next_word == undefined || PUNCTUATIONS.includes(next_word))
    ) {
        return '▓'.repeat(word.length);
    } else {
        return word;
    }
}

// Initialize the expression
let expression;
let expressionStatic;
// These are words that are not replaced if part of 'slurList'
let missedSlurListStatic = 'லூசு|கூFire';
// These are words that are not replaced if part of 'slurList' and contain escape character
let missedEscapedSlurListStatic = 'choo$iya';

// Function to initialize/update the expression's
async function initializeExpressions() {
    try {
        // Fetch all words
        const allSlurWords = await getAllSlurs();
        const slurList = allSlurWords.map((wordObj) => wordObj.word);
        console.log("Slur words fetched from DB", slurList.length);

        // Sort and join slur list
        const sortedSlurList = slurList.sort((a, b) => b.length - a.length).join('|');
        expression = new RegExp(`(?:${sortedSlurList})`, 'gi');

        const sortedMissedList = missedSlurListStatic.split('|').sort((a, b) => b.length - a.length).join('|');
        expressionStatic = new RegExp(`(?:${sortedMissedList})`, 'gi');

        console.log('Expressions initialized with slurs.');
    } catch (error) {
        console.error('Error initializing expressions:', error);
    }
}

// Initialize expressions on module load
(async () => {
    await initializeExpressions();
})();

export function replaceSlur(sentence) {
    // Ensure expressions are initialized
    if (!expression || !expressionStatic) {
        throw new Error('Expressions not initialized. Call initializeExpressions first.');
    }
    
    sentence = sentence.replace(expression, generateMask);
    sentence = sentence.replace(expressionStatic, generateMask);
    sentence = sentence.replace(missedEscapedSlurListStatic, generateMask);
    
    return sentence;
}

function testSlurReplace() {

    // inputs space-separated slurList to get masked output
    let slurListSpaced = slurList.replaceAll('|', ' ');
    slurListSpaced = replaceSlur(slurListSpaced);
    if (slurListSpaced != '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓▓ ▓▓')
         {
            throw new Error('Slur replace failure 1');
         }

    // inputs quote-separated slurList to get masked output
    let slurListQuoted = slurList.replaceAll('|', '"');
    slurListQuoted = replaceSlur(slurListQuoted);
    if (slurListQuoted != '▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓▓"▓▓')
        {
            throw new Error('Slur replace failure 2');
        }
    
    // inputs space-separated missedSlurListStatic to get masked output
    let missedSlurListSpaced = missedSlurListStatic.replaceAll('|', ' ');
    missedSlurListSpaced = replaceSlur(missedSlurListSpaced);
    if (missedSlurListSpaced != '▓▓▓▓▓▓ ▓▓▓▓')
    {
        throw new Error('Slur replace failure 3');
    }

    // inputs quote-separated missedSlurListStatic to get masked output
    let missedSlurListQuoted = missedSlurListStatic.replaceAll('|', '"');
    missedSlurListQuoted = replaceSlur(missedSlurListQuoted);
    if (missedSlurListQuoted != '▓▓▓▓▓▓"▓▓▓▓')
    {
        throw new Error('Slur replace failure 4');
    }

    // inputs missedEscapedSlurListStatic to get masked output
    let missedEscapedSlurListStaticReplace = replaceSlur(missedEscapedSlurListStatic);
    if (missedEscapedSlurListStaticReplace != '▓▓▓▓▓▓▓▓')
    {
        throw new Error('Slur replace failure 5');
    }

}