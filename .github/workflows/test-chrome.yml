name: "TEST"

on:
  pull_request:
    branches:
      - actions

jobs:
  chrome-publish:
    name: "Pre Release Extension"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout Development Branch"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Get commit SHA
        shell: bash
        run: |
          echo "setting variables"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: "Build and Test"
        run: |
          cd browser-extension/plugin
          ls
          pwd
          npm install
          npm run build
          zip extension.zip ./dist/ -r

      - name: "Upload extension.zip as artifact"
        uses: actions/upload-artifact@v3
        with:
          name: extension
          path: browser-extension/plugin/extension.zip

      # - name: Create PR Comment with Artifact Link
      #   uses: actions/github-script@v5
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const artifact_url = `https://github.com/${{ github.context.repo.owner }}/${{ github.context.repo.repo }}/runs/${{ github.run_id }}/artifacts/extension`;
      #       const comment_body = `You can download the extension artifact [here](${artifact_url}).`;
      #       await github.rest.issues.createComment({
      #         issue_number: context.payload.pull_request.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: comment_body
      #       });

      - name: Create PR Comment with Artifact Link
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { Octokit } = require("@octokit/core");

            const octokit = new Octokit({
              auth: process.env.GITHUB_TOKEN
            });

            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const run_id = github.run_id;
            const artifact_name = "extension";
            const archive_format = "zip";

            const response = await octokit.request(
              'GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}',
              {
                owner,
                repo,
                artifact_id: artifact_name,
                archive_format,
                headers: {
                  'X-GitHub-Api-Version': '2022-11-28'
                }
              }
            );

            const artifactUrl = response.data.url;

            const comment_body = `You can download the extension artifact [here](${artifactUrl}).`;
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment_body
            });